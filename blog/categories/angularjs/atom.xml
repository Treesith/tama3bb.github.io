<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: AngularJS | AngularJS Ninja]]></title>
  <link href="http://angularjsninja.com/blog/categories/angularjs/atom.xml" rel="self"/>
  <link href="http://angularjsninja.com/"/>
  <updated>2013-10-19T18:04:28+09:00</updated>
  <id>http://angularjsninja.com/</id>
  <author>
    <name><![CDATA[Akihito Tamagawa]]></name>
    <email><![CDATA[tama3bb@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[AngularJS 1.2.0-rc2 で Typeahead が動かない]]></title>
    <link href="http://angularjsninja.com/blog/2013/10/19/angularjs-1.2.0-rc2-typeahead/"/>
    <updated>2013-10-19T17:42:00+09:00</updated>
    <id>http://angularjsninja.com/blog/2013/10/19/angularjs-1.2.0-rc2-typeahead</id>
    <content type="html"><![CDATA[<hr />

<h2>AngularJS で UI Bootstrap の Typeahead が動かない</h2>

<p>AngularJS 1.2.0 の rc2 にした途端、UI Bootstrap (0.6.0) の Typeahead (Autocomplete みたいなやつ) が動かなくなった。</p>

<p>仕様変更なのかバグなのかわからず、とりあえず<code>ui-bootstrap-tpls-0.6.0.js</code>のコードを見たりしながらも AngularJS か UI Bootstrap のほうでバグ修正してくんないかなーと期待＆様子見していたところ、AngularJS 1.2.0 の rc3 では正常に動作するようになったので一件落着。</p>

<p>ちなみに、rc2 でのエラーは、<code>matches is undefined</code>というもの。</p>

<p>Stack Overflow で関連する記事は、<a href="http://stackoverflow.com/questions/18764023/angularjs-1-2-0-bootstrap-ui-0-6-0-bootstrap3-bis2-typeahead/19377002#19377002">AngularJS 1.2.0 Bootstrap UI 0.6.0 (bootstrap3_bis2) Typeahead</a> かな。rc2 では、<code>promise</code>絡みの実装に問題があったみたいだ。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[jQuery と AngularJS]]></title>
    <link href="http://angularjsninja.com/blog/2013/10/05/jquery-to-angularjs/"/>
    <updated>2013-10-05T20:32:00+09:00</updated>
    <id>http://angularjsninja.com/blog/2013/10/05/jquery-to-angularjs</id>
    <content type="html"><![CDATA[<hr />

<h2>jQuery と AngularJS は併用できるのか？</h2>

<ul>
<li>jQuery と AngularJS は併用可能</li>
<li>jQuery メインのサイトで AngularJS を部分的に使用可能</li>
</ul>


<!-- more -->


<h2>AngularJS と jQuery は併用可能</h2>

<p>AngularJS より先に jQuery を読み込ませていればその jQuery が利用される。jQuery を読み込ませていなければ AngularJS が内蔵している jqLite（jQuery の API 互換サブセット）の実装が利用される。</p>

<p>jqLite が実装している jQuery 互換の DOM 操作関連の API は、<a href="http://docs.angularjs.org/api/angular.element">AngularJS: element</a> で確認できるが、DOM 操作系の主要なメソッドは実装されている。</p>

<p>AngularJS 1.2 では、<code>bind()</code>/<code>unbind()</code>でなく<code>on()</code>/<code>off()</code>が利用されるため、jQuery のバージョンは 1.7.1 以降とする必要がある。</p>

<p>AngularJS で jQuery の DOM 操作を実装する場合、controller では要素の追加・削除や表示・非表示などの DOM 操作を実装せずに、AngularJS にビルトイン（標準）の directive を利用するか、自作の directive で DOM 操作を実装しよう。</p>

<p><code>ng-repeat</code>、<code>ng-show</code>、<code>ng-class</code>など、jQuery で実装していた処理を代替できる directive が多数存在するので、積極的に利用してコード量を減らそう。</p>

<h2>jQuery メインのサイトで AngularJS を部分的に使用可能</h2>

<p>jQuery メインに実装してきたサイトで AngularJS を部分的に使うということも可能で、そういう場合には AngularJS の適用範囲（scope）を決めるルート的な directive の<code>ng-app</code>を<code>html</code>や<code>body</code>要素ではなく、必要最小限の範囲を囲う要素に対して記述する。</p>

<p>jQuery で大半を実装しているようなサイトやアプリケーションで、全面的に AngularJS に書き変える決断がすぐにできない場合には、少しずつ部分的に導入して攻めていこう。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[AngularJS の localStorage モジュール angularLocalStorage]]></title>
    <link href="http://angularjsninja.com/blog/2013/09/13/angular-localstorage/"/>
    <updated>2013-09-13T23:38:00+09:00</updated>
    <id>http://angularjsninja.com/blog/2013/09/13/angular-localstorage</id>
    <content type="html"><![CDATA[<hr />

<p>AngularJS アプリケーションで localStorage を使うときに便利なモジュールの紹介。</p>

<p><a href="https://github.com/agrublev/angularLocalStorage">agrublev/angularLocalStorage</a></p>

<!-- more -->


<h2>機能</h2>

<ul>
<li>AngularJS の model と localStorage を双方向にバインド</li>
<li>オブジェクト、配列も変換不要</li>
<li>localStorage 非対応のブラウザでは $cookies にフォールバック（angular-cookies.min.js を参照し、<code>ngCookies</code>を依存モジュールとして記述）</li>
</ul>


<h2>使い方</h2>

<p>依存モジュールとして<code>localStorage</code>を追加。</p>

<p><code>javascript app.js
var yourApp = angular.module('yourApp', [..., 'angularLocalStorage']
</code></p>

<p>controller に<code>storage</code>を記述。</p>

<p><code>javascript controllers.js
yourApp.controller('yourController', function($scope, storage) {
</code></p>

<p><code>storage</code>を使う。デフォルト値やキーを変更可能。</p>

<p>``` javascript controllers.js
// storage.variable にバインド
storage.bind($scope,&lsquo;varName&rsquo;);</p>

<p>// * defaultValue: デフォルト値
// * storeName: 変数名と異なる localStorage への保存 key を指定
storage.bind($scope, &lsquo;varName&rsquo;, {defaultValue: &lsquo;randomValue123&rsquo;, storeName: &lsquo;customStoreKey&rsquo;});
```</p>

<p>これだけ。とにかく便利。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[AngularJS カンファレンス『ng-conf』が年始に開催]]></title>
    <link href="http://angularjsninja.com/blog/2013/09/12/ng-conf-2014/"/>
    <updated>2013-09-12T23:31:00+09:00</updated>
    <id>http://angularjsninja.com/blog/2013/09/12/ng-conf-2014</id>
    <content type="html"><![CDATA[<hr />

<p><img src="http://lh5.googleusercontent.com/proxy/wsYUaddAvIcNhXYf0kt63gkDYp_VzQ2-JwB-jUlPzAazYg53ibQF8JdCn2SNwI9ZucozuoJDrhvT54sOHfX44Jiq_v0FvlzDIsQc-4s-q-mnJdx_y6nDHx-VmA=w120-h120" alt="ng-conf" /></p>

<p>AngularJS だけの初めてのカンファレンスが、2014 年 1 月 16 日、17 日に開催される。開催地はユタ州ソルトレイクシティ。</p>

<!-- more -->


<h4>公式ページ</h4>

<p><a href="http://www.ng-conf.org/">ng-conf 2014 &ndash; The World&rsquo;s First Angular Conference in Salt Lake City, Utah</a></p>

<h4>Eventbrite</h4>

<p><a href="http://ng-conf-slc-2014.eventbrite.com">ng-conf 2014 Tickets, Salt Lake City &ndash; Eventbrite</a></p>

<h4>Google+</h4>

<p><a href="https://plus.google.com/101125427377197999853/posts">ng-conf &ndash; Google+</a></p>

<p>Eventbrite の情報では、開催前日の 1 月 15 日に Jon Lindquist さんにより、6 時間のトレーニングを受けられるみたい。Jon Lindquist さんは、AngularJS の学習動画で有名な <a href="http://egghead.io">Egghead.io</a> の人。</p>

<p>2 日間で $600.00 + $27.95、トレーニングを含む 3 日間で $1,000.00 + $39.95。いつもながら、アメリカのカンファレンスってほんと高い。まあ、AngularJS のおかげで稼がせてもらってるようなもんですから、こういうときにお返ししましょうね。</p>

<p>Google+ での情報によると、$600 ドルは Early Bird Ticket Sales、つまり早割で安くなっていて、正規の金額は 2 日間で $800 の様子。</p>

<p>さあ、みんなで行こうじゃありませんかー！</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[AngularJS を古い IE に対応させるには]]></title>
    <link href="http://angularjsninja.com/blog/2013/09/11/angularjs-ie-compatibility/"/>
    <updated>2013-09-11T23:58:00+09:00</updated>
    <id>http://angularjsninja.com/blog/2013/09/11/angularjs-ie-compatibility</id>
    <content type="html"><![CDATA[<hr />

<p>AngularJS を IE 8 以前の Internet Explorer に対応させるには、<a href="http://docs.angularjs.org/guide/ie">AngularJS: Internet Explorer Compatibility</a> のページに記載されている手順を実施する必要がある。</p>

<!-- more -->


<p>まず json2.js または json3.js。</p>

<p>``` html index.html
&lt;!doctype html>
<html xmlns:ng="http://angularjs.org">
  <head></p>

<pre><code>&lt;!--[if lte IE 8]&gt;
  &lt;script src="http://angularjsninja.com/path/to/json2.js"&gt;&lt;/script&gt;
&lt;![endif]--&gt;
</code></pre>

<p>  </head>
  <body></p>

<pre><code>...
</code></pre>

<p>  </body>
</html>
```</p>

<p>次に &ldquo;ng-app&rdquo; という値の id 属性を、ng-app 属性を記述する要素に追加。</p>

<p><code>html index.html
&lt;!doctype html&gt;
&lt;html xmlns:ng="http://angularjs.org" id="ng-app" ng-app="optionalModuleName"&gt;
  ...
&lt;/html&gt;
</code></p>

<p>最後に、カスタムタグを使わないようにする。</p>

<p>または、&lt;ng-view> や 独自のカスタムタグ（例えば <alert> や <tabset> など）を使うのであれば、そのためのコード（document.createElement）を追加。</p>

<p>``` html index.html
&lt;!doctype html>
<html xmlns:ng="http://angularjs.org" id="ng-app" ng-app="optionalModuleName">
  <head></p>

<pre><code>&lt;!--[if lte IE 8]&gt;
  &lt;script&gt;
    document.createElement('ng-include');
    document.createElement('ng-pluralize');
    document.createElement('ng-view');

    // Optionally these for CSS
    document.createElement('ng:include');
    document.createElement('ng:pluralize');
    document.createElement('ng:view');
  &lt;/script&gt;
&lt;![endif]--&gt;
</code></pre>

<p>  </head>
  <body></p>

<pre><code>...
</code></pre>

<p>  </body>
</html>
```</p>

<h2>それだけで済まない場合も</h2>

<p>最後に、さっきのページでは扱われていないものの、$http の delete メソッドを使っているとエラーが発生して動かないので、delete メソッドを以下のように変更。</p>

<p><code>javascript
$http.delete(…) // エラー
$http['delete'](…) // これで OK
</code></p>
]]></content>
  </entry>
  
</feed>
