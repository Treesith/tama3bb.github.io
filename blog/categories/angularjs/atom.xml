<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: AngularJS | AngularJS Ninja]]></title>
  <link href="http://angularjsninja.com/blog/categories/angularjs/atom.xml" rel="self"/>
  <link href="http://angularjsninja.com/"/>
  <updated>2014-02-06T15:29:03+09:00</updated>
  <id>http://angularjsninja.com/</id>
  <author>
    <name><![CDATA[Akihito Tamagawa]]></name>
    <email><![CDATA[tama3bb@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[非活性（ng-disabled）にしてもaタグのボタンだとng-click動くので注意]]></title>
    <link href="http://angularjsninja.com/blog/2014/02/06/anchor-with-ngdisabled-caveat/"/>
    <updated>2014-02-06T15:15:21+09:00</updated>
    <id>http://angularjsninja.com/blog/2014/02/06/anchor-with-ngdisabled-caveat</id>
    <content type="html"><![CDATA[<hr />

<h2>Bootstrap のボタン</h2>

<p><a href="http://getbootstrap.com">Bootstrap</a> ベースのボタンに<code>ng-click</code>を記述する（form を submit しない）コードは、主に以下の 2 通りある。</p>

<p><code>html
&lt;button type="button" class="btn" ng-click="handleClick()"&gt;Done&lt;/button&gt;
&lt;a href="#" class="btn" ng-click="handleClick()"&gt;Done&lt;/a&gt;
</code></p>

<p>どちらでも見た目は同じになるし、イベント処理は<code>ng-click</code>がやってくれるし、<code>&lt;a&gt;</code>のほうがコードは短くなるしって感じで、どっちも一緒なんだし<code>&lt;a&gt;</code>にしとこってノリでやってると、<code>disabled</code> のワナにハマるかも。</p>

<h2>aタグの場合、ng-disabled で非活性にできるのは見た目だけ</h2>

<p>ボタンを非活性にするための AngularJS 標準 directive に、<a href="http://docs.angularjs.org/api/ng.directive:ngDisabled"><code>ng-disabled</code></a>がある。これを使うと、<code>ng-disabled="true"</code>となるときにボタンが非活性になってくれる。</p>

<p><code>html
&lt;button type="button" class="btn" ng-click="handleClick()" ng-disabled="aForm.$invalid"&gt;Done&lt;/button&gt;
&lt;a href="#" class="btn" ng-click="handleClick()" ng-disabled="aForm.$invalid"&gt;Done&lt;/a&gt;
</code></p>

<p>ここで注意が必要なのは、<code>&lt;a&gt;</code>のほうは<code>ng-disabled="true"</code>で非活性になっているときでも、ボタンクリックで<code>ng-click</code>の処理が走るという点。見た目が非活性になっているので、<code>ng-click</code>のほうも制御してくれているだろうと期待して（思い込んで）しまう。</p>

<p>そんなわけで、<code>&lt;a&gt;</code>タグに<code>ng-disabled</code>を使うときは注意しよう。<code>&lt;button type="button"&gt;</code>に変えるか、どうしても<code>&lt;a&gt;</code>タグでいくなら<code>ng-click="!aForm.$invalid &amp;&amp; handleClick()"</code>とかってしときましょう…。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[AngularJSのng-ifで文字列を使うなら !! を付けよう]]></title>
    <link href="http://angularjsninja.com/blog/2014/02/05/ngif-string-caveat/"/>
    <updated>2014-02-05T17:44:16+09:00</updated>
    <id>http://angularjsninja.com/blog/2014/02/05/ngif-string-caveat</id>
    <content type="html"><![CDATA[<hr />

<h2>&lsquo;0&rsquo; が表示されない…</h2>

<p><code>ng-if</code> あるいは、<code>ng-show</code>や<code>ng-hide</code>を使うときに、string 値の有無で表示判定を記述することもある。</p>

<p>
``` html</p>

<p ng-if="model.value">{{model.label}}</p>


<p>```
</p>

<p>そんなとき、<code>model.value</code>の値が<code>'0'</code>だったらどうなるか。</p>

<p>なんと、表示されない…。</p>

<!-- more -->


<h2>&lsquo;0&rsquo; だけじゃない</h2>

<p>この現象、<code>'0'</code>だけでなく、<code>'f'</code> <code>'no'</code> <code>'n'</code>といった文字列（大文字・小文字問わず）の場合であっても表示されない。</p>

<p>angular.js のコードはこうなってる。</p>

<p>``` javascript
function toBoolean(value) {
  if (typeof value === &lsquo;function&rsquo;) {</p>

<pre><code>value = true;
</code></pre>

<p>  } else if (value &amp;&amp; value.length !== 0) {</p>

<pre><code>var v = lowercase("" + value);
value = !(v == 'f' || v == '0' || v == 'false' || v == 'no' || v == 'n' || v == '[]');
</code></pre>

<p>  } else {</p>

<pre><code>value = false;
</code></pre>

<p>  }
  return value;
}
```</p>

<h2>boolean にしちゃっておこう</h2>

<p>ということで、文字列の有無で判定させたいだけってときは<code>!!</code>を付けときましょう。boolean とか object の場合でも<code>!!</code>付ける方針にしとくのがラクでいいかな。</p>

<p>
``` html</p>

<p ng-if="!!model.value">{{model.label}}</p>


<p>```
</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[AngularJS で HTTP ヘッダを設定するには]]></title>
    <link href="http://angularjsninja.com/blog/2014/02/04/angularjs-http-headers/"/>
    <updated>2014-02-04T16:08:51+09:00</updated>
    <id>http://angularjsninja.com/blog/2014/02/04/angularjs-http-headers</id>
    <content type="html"><![CDATA[<hr />

<h2>HTTP Headers を設定</h2>

<p>AngularJS による HTTP リクエストについては、<code>$httpProvider.defaults.headers</code>オブジェクトで HTTP ヘッダ情報を設定できる。</p>

<p><code>javascript
$httpProvider.defaults.headers.common.Authorization = '...';
</code></p>

<p>以下のように、get だけ、post だけに適用することも。</p>

<p><code>javascript
$httpProvider.defaults.headers.get['Authorization'] = '...';
$httpProvider.defaults.headers.post = { 'Authorization' : '...' };
</code></p>

<p>（複数の書き方を例示するために、わざと違った書き方にしてます）</p>

<!-- more -->


<h2>Cache-Control の設定例</h2>

<p>IE は XHR (Ajax) リクエストでもキャッシュするようなので、IE をサポートするのであれば初めから Cache-Control などの設定を入れておくのがいいのかも。</p>

<p><code>javascript
$httpProvider.defaults.headers.common['Cache-Control'] = 'no-cache';
</code></p>

<p>他にも If-Modified-Since を設定する必要がありそう。あるいは Expires のほうが適切なのかも。ここの設定について詳しい方、こっそり教えてください！</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[AngularJS で Enter キーを検出するコード]]></title>
    <link href="http://angularjsninja.com/blog/2014/02/03/angularjs-event-on-enter/"/>
    <updated>2014-02-03T18:28:23+09:00</updated>
    <id>http://angularjsninja.com/blog/2014/02/03/angularjs-event-on-enter</id>
    <content type="html"><![CDATA[<hr />

<p>テキストボックスなどで、Enter キーによるイベント処理を記述するコード例をいくつか。</p>

<h2>$event オブジェクト</h2>

<p><code>ng-keydown</code>などの directive を利用する際には、<code>$event</code>でイベントオブジェクトを利用。</p>

<p>``` javascript
$scope.comments = [];
$scope.handleKeydown = function(e) {
  if (e.which !== 13) {</p>

<pre><code>$scope.comments.push($scope.newComment);
$scope.newComment = '';
</code></pre>

<p>  }
}
```</p>

<p>``` html
<input type="text" ng-model="newComment" ng-keydown="handleKeydown($event)"></p>

<p><ul>
  <li ng-repeat="comment in comments"></li>
<ul>
```</p>

<p><!-- more --></p>

<h2>カスタム directive でのイベント処理</h2>

<p>カスタム directive を定義する場合は、jQuery と同じような感じでバインド。</p>

<p>``` javascript
myApp.directive(&lsquo;handleKeydown&rsquo;, function() {
  return {</p>

<pre><code>require: 'ngModel',
link: function(scope, element, attrs, modelCtrl) {
  element.bind('keydown', function(e) {
    if (e.which === 13) {
      scope.$apply(function() {
        scope.comments.push(scope.newComment);
        scope.newComment = '';
      });
    }
  });
}
</code></pre>

<p>  };
});
```</p>

<p><code>html
&lt;input type="text" ng-model="newComment" handle-keydown&gt;
</code></p>

<h2>form（ng-form）の submit</h2>

<p>最後に持ってきたものの、form の submit で実現することを真っ先に検討するのが吉。Enter キーも処理されるし、テキストボックスがたくさんあっても無問題。</p>

<p><code>html
&lt;form ng-submit="handleKeydown()"&gt;
  &lt;input type="text" ng-model="newComment"&gt;
&lt;/form&gt;
</code></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Angular カンファレンス（ng-conf 2014）Jan. 17 動画まとめ]]></title>
    <link href="http://angularjsninja.com/blog/2014/01/18/ng-conf-2014/"/>
    <updated>2014-01-18T12:49:50+09:00</updated>
    <id>http://angularjsninja.com/blog/2014/01/18/ng-conf-2014</id>
    <content type="html"><![CDATA[<hr />

<h2>ng-conf 2014 &ndash; The World’s First Angular Conference in Salt Lake City, Utah</h2>

<p>Angular カンファレンス <a href="http://ng-conf.org">ng-conf 2014</a> 最終日（Friday, January 17）の動画まとめです。</p>

<p>YouTube の <a href="http://www.youtube.com/user/ngconfvideos">ng-conf 2014 チャンネル</a> だけでなく、公式サイトの<a href="http://angularjs.org">トップページ</a>にも動画が表示されるようになっていますが、このエントリーでは最終日のスケジュールどおりに並べています。</p>

<h3>Angular === Community (Keynote)</h3>

<iframe width="560" height="315" src="http://angularjsninja.com//www.youtube.com/embed/h-SQvre_6qU" frameborder="0" allowfullscreen></iframe>


<p>Igor Minar</p>

<!-- more -->


<h3>How to use Typescript on your Angular Application and Be Happy</h3>

<iframe width="560" height="315" src="http://angularjsninja.com//www.youtube.com/embed/u6TeBM_SC8w" frameborder="0" allowfullscreen></iframe>


<p>Sean Hess</p>

<h3>Building Realtime Apps With Firebase and Angular</h3>

<iframe width="560" height="315" src="http://angularjsninja.com//www.youtube.com/embed/e4yUTkva_FM" frameborder="0" allowfullscreen></iframe>


<p>Anant Narayanan</p>

<h3>Angular Directives that Scale</h3>

<iframe width="560" height="315" src="http://angularjsninja.com//www.youtube.com/embed/TQoV0Jt3IJg" frameborder="0" allowfullscreen></iframe>


<p>Burke Holland</p>

<h3>Dart, it&rsquo;s Angular Too</h3>

<iframe width="560" height="315" src="http://angularjsninja.com//www.youtube.com/embed/RqKUTGB-CxA" frameborder="0" allowfullscreen></iframe>


<p>James Deboer</p>

<h3>Zones</h3>

<iframe width="560" height="315" src="http://angularjsninja.com//www.youtube.com/embed/3IqtmUscE_U" frameborder="0" allowfullscreen></iframe>


<p>Brian Ford</p>

<h3>Angular with Browserify</h3>

<iframe width="560" height="315" src="http://angularjsninja.com//www.youtube.com/embed/NTPutZ99XWY" frameborder="0" allowfullscreen></iframe>


<p>Ben Clinkinbeard</p>

<h3>Angular and RequireJS</h3>

<iframe width="560" height="315" src="http://angularjsninja.com//www.youtube.com/embed/4yulGISBF8w" frameborder="0" allowfullscreen></iframe>


<p>Thomas Burleson</p>

<h3>Using AngularJS to create iPhone &amp; Android applications with PhoneGap</h3>

<iframe width="560" height="315" src="http://angularjsninja.com//www.youtube.com/embed/wVntVkRLR3M" frameborder="0" allowfullscreen></iframe>


<p>Daniel Zen</p>

<h3>Robotics powering interfaces with AngularJS to the Arduino.</h3>

<iframe width="560" height="315" src="http://angularjsninja.com//www.youtube.com/embed/MhVgGE-pgEY" frameborder="0" allowfullscreen></iframe>


<p>Ari Lerner</p>

<h3>End to End Angular Testing with Protractor</h3>

<iframe width="560" height="315" src="http://angularjsninja.com//www.youtube.com/embed/aQipuiTcn3U" frameborder="0" allowfullscreen></iframe>


<p>Julie Ralph</p>

<h3>Using ngModelController to Make Sexy Custom Components</h3>

<iframe width="560" height="315" src="http://angularjsninja.com//www.youtube.com/embed/jVzymluqmg4" frameborder="0" allowfullscreen></iframe>


<p>Jason Aden</p>

<h3>PhotoHunt</h3>

<iframe width="560" height="315" src="http://angularjsninja.com//www.youtube.com/embed/I-TvWfXVR08" frameborder="0" allowfullscreen></iframe>


<p>Silvano Luciani</p>

<h3>Angular Performance</h3>

<iframe width="560" height="315" src="http://angularjsninja.com//www.youtube.com/embed/zyYpHIOrk_Y" frameborder="0" allowfullscreen></iframe>


<p>The Double Click Team</p>

<h3>AngularJS ORM</h3>

<iframe width="560" height="315" src="http://angularjsninja.com//www.youtube.com/embed/Iw-3qgG_ipU" frameborder="0" allowfullscreen></iframe>


<p>Dean Sofer</p>
]]></content>
  </entry>
  
</feed>
